@model Admin
@{
    Layout = "~/Views/Shared/_AuthLayout.cshtml";
}

<div class="container">
    <main role="main" class="pb-3">
        <div class="container">
            <div class="row justify-content-md-center mt-md-3">
                <div class="col col-md-5">
                    <div class="text-center">
                        <h1>Správa používateľov</h1>
                    </div>
                    @using (Html.BeginForm("AdminPost", "Screen"))
                    {
                        <div class="mt-md-3">
                            @if (ViewBag.AddSuccess == true)
                            {
                                <div class="alert alert-success">
                                    Používateľ bol úspešne pridaný.
                                </div>
                            }
                            @if (ViewBag.RemoveSuccess == true)
                            {
                                <div class="alert alert-success">
                                    Používateľ bol úspešne odstránený.
                                </div>
                            }
                            @if (ViewBag.InvalidPerson == true)
                            {
                                <div class="alert alert-warning">
                                    Zadaný užívateľ v databáze neexistuje.
                                </div>
                            }
                            @if (ViewBag.NameUsed == true)
                            {
                                <div class="alert alert-warning">
                                    Užívateľký email je už použitý.
                                </div>
                            }
                            @if (ViewBag.InvalidBirthNumber == true)
                            {
                                <div class="alert alert-warning">
                                    Zlé rodné číslo.
                                </div>
                            }
                            @if (ViewData.ModelState[string.Empty] != null && !string.IsNullOrEmpty(ViewData.ModelState[string.Empty].ToString()))
                            {
                                <div class="alert alert-warning">
                                    @ViewData.ModelState[string.Empty]
                                </div>
                            }
                            @Html.LabelFor(m => m.Action)
                            @Html.DropDownListFor(m => m.Action, new SelectList(Enum.GetValues(typeof(Actions))), null, new { @class = "form-select", id="action" })
                            @Html.LabelFor(m => m.Role)
                            @Html.DropDownListFor(m => m.Role, new SelectList(Enum.GetValues(typeof(Roles))), null, new { @class = "form-select" })
                            <div class="form-group mt-2 js-form">
                                @Html.LabelFor(m => m.FirstName)
                                @Html.TextBoxFor(m => m.FirstName, new {@class = "form-control"})
                                @Html.ValidationMessageFor(m => m.FirstName, "", new {@class = "text-danger"})
                            </div>
                            <div class="form-group mt-2 js-form">
                                @Html.LabelFor(m => m.LastName)
                                @Html.TextBoxFor(m => m.LastName, new {@class = "form-control"})
                                @Html.ValidationMessageFor(m => m.LastName, "", new {@class = "text-danger"})
                            </div>
                            <div class="form-group mt-2 js-form">
                                @Html.LabelFor(m => m.BirthNumber)
                                @Html.TextBoxFor(m => m.BirthNumber, new {@class = "form-control"})
                                @Html.ValidationMessageFor(m => m.BirthNumber, "", new {@class = "text-danger"})
                            </div>
                            <div class="form-group mt-2 js-add">
                                @Html.LabelFor(m => m.Email)
                                @Html.TextBoxFor(m => m.Email, new {@class = "form-control"})
                                @Html.ValidationMessageFor(m => m.Email, "", new {@class = "text-danger"})
                            </div>
                            <div class="form-group mt-2 js-add">
                                @Html.LabelFor(m => m.Password)
                                @Html.PasswordFor(m => m.Password, new {@class = "form-control"})
                                @Html.ValidationMessageFor(m => m.Password, "", new {@class = "text-danger"})
                            </div>
                            <div class="text-center mt-2">
                                <button type="submit" value="Submit" class="btn btn-primary">Potvrdiť</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </main>
</div>

@section scripts {

    <script>
        function setAddVisibility(isVisible) {
            document.querySelectorAll(".js-add").forEach(el => {
                el.style.display = isVisible ? "block" : "none";
            })
        }

        document.addEventListener("DOMContentLoaded", () => {
            setAddVisibility(true);
        });

        document.querySelector("#action").addEventListener("change", (e) => {
            const value = e.target.value;

            if (value === "Add") {
                setAddVisibility(true);
            } else {
                setAddVisibility(false);
            }
        });
    </script>

}